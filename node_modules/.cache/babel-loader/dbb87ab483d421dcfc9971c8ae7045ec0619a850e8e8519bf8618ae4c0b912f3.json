{"ast":null,"code":"var _jsxFileName = \"/Users/Tatiana/src/_react/src/pages/Scheduler.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, Link } from 'react-router-dom';\nimport { CourtsLoader } from './Courts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scheduler() {\n  _s();\n  const players = useLoaderData(PlayersLoader);\n  const courts = useLoaderData(CourtsLoader);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-secondary text-white text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: \"Schedule a Hitting Session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"my-form\",\n              className: \"form\",\n              action: \"/submit-schedule\",\n              method: \"post\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"hitting-partner\",\n                  children: \"Hitting Partner:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  id: \"hitting-partner\",\n                  name: \"hitting-partner\",\n                  required: true,\n                  children: players.map(player => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: player.id.toString(),\n                    children: [player.fname, \" \", player.lname, \" (\", player.skill_lvl, \")\"]\n                  }, player.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"datetime\",\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"datetime-local\",\n                  id: \"datetime\",\n                  name: \"datetime\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"court\",\n                  children: \"Court:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  id: \"court\",\n                  name: \"court\",\n                  required: true,\n                  children: courts.map(court => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: court.id.toString(),\n                    children: [court.fname, \" (\", court.borough, \")\"]\n                  }, court.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Match Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-group btn-group-toggle\",\n                  \"data-toggle\": \"buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-secondary active\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"match_type\",\n                      value: \"match\",\n                      autoComplete: \"off\",\n                      checked: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 23\n                    }, this), \" Match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"btn btn-outline-secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"match_type\",\n                      value: \"practice\",\n                      autoComplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 23\n                    }, this), \" Practice\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n// // data loader\n// export const PlayersLoader = async () => {\n\n//     const res = await fetch('http://localhost:5000/all-players')\n\n//     if (!res.ok) {\n//       throw Error('Could not fetch the list of courts')\n//     }\n\n//     return res.json()\n//   }\n_s(Scheduler, \"mSoRm01ga6q2B5CJzK8F8vIX5Q0=\", false, function () {\n  return [useLoaderData, useLoaderData];\n});\n_c = Scheduler;\nvar _c;\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"names":["useLoaderData","Link","CourtsLoader","Scheduler","players","PlayersLoader","courts","map","player","id","toString","fname","lname","skill_lvl","court","borough"],"sources":["/Users/Tatiana/src/_react/src/pages/Scheduler.js"],"sourcesContent":["import { useLoaderData, Link } from 'react-router-dom'\nimport {CourtsLoader} from './Courts'\n\n\nexport default function Scheduler() {\n  const players = useLoaderData(PlayersLoader)\n  const courts = useLoaderData(CourtsLoader)\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-9\">\n          <div className=\"card mt-4\">\n            <div className=\"card-header bg-secondary text-white text-center\">\n              <h4 className=\"mb-0\">Schedule a Hitting Session</h4>\n            </div>\n            <div className=\"card-body\">\n              <form id=\"my-form\" className=\"form\" action=\"/submit-schedule\" method=\"post\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"hitting-partner\">Hitting Partner:</label>\n                  <select className=\"form-control\" id=\"hitting-partner\" name=\"hitting-partner\" required>\n                    {players.map((player) => (      \n                      <option \n                        key={player.id} \n                        value={player.id.toString()}\n                        >{player.fname} {player.lname} ({player.skill_lvl})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"datetime\">Date:</label>\n                  <input type=\"datetime-local\" id=\"datetime\" name=\"datetime\" required/>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"court\">Court:</label>\n                  <select className=\"form-control\" id=\"court\" name=\"court\" required>\n                    {courts.map((court) => (  \n                      <option \n                        key={court.id} \n                        value={court.id.toString()}\n                        >{court.fname} ({court.borough})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>Match Type:</label>\n                  <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label className=\"btn btn-outline-secondary active\">\n                      <input type=\"radio\" name=\"match_type\" value=\"match\" autoComplete=\"off\" checked/> Match\n                    </label>\n                    <label className=\"btn btn-outline-secondary\">\n                      <input type=\"radio\" name=\"match_type\" value=\"practice\" autoComplete=\"off\"/> Practice\n                    </label>\n                  </div>\n                </div>\n                {/* <!-- Hidden input field to store the session ID -->\n                <input type=\"hidden\" name=\"session_id\" value=\"{{ session['id'] }}\">\n                <button type=\"submit\" className=\"btn btn-primary col-md-3\">Submit</button> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n  }\n\n\n\n\n  \n// // data loader\n// export const PlayersLoader = async () => {\n\n//     const res = await fetch('http://localhost:5000/all-players')\n    \n//     if (!res.ok) {\n//       throw Error('Could not fetch the list of courts')\n//     }\n    \n//     return res.json()\n//   }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}