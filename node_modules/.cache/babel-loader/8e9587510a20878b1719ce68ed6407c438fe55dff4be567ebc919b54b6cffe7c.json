{"ast":null,"code":"var _jsxFileName = \"/Users/Tatiana/src/_react/src/layouts/RootLayout.js\",\n  _s = $RefreshSig$();\nimport { Outlet, NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Root() {\n  _s();\n  const [showPopup, setShowPopup] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const handleLoginClick = () => {\n    setShowPopup(true);\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n  const handlePopupClick = event => {\n    if (event.target === event.currentTarget) {\n      setShowPopup(false);\n    }\n  };\n  const handleEscapeKey = event => {\n    if (event.keyCode === 27) {\n      setShowPopup(false);\n    }\n  };\n  const handleLoginFormSubmit = event => {\n    event.preventDefault();\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const rememberMe = event.target.rememberMe.checked;\n\n    // Send email, password, and rememberMe to server for authentication\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        rememberMe\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Authentication successful\n        const loginPopup = document.getElementById('login-popup');\n        loginPopup.style.display = \"none\";\n        setLoggedIn(true);\n        setShowPopup(false);\n        // window.location.href = '/dashboard';\n      } else {\n        // Authentication failed\n        const alertBox = '<div class=\"alert alert-danger\" role=\"alert\">' + 'Login failed. Please try again.' + '</div>';\n        setAlertMessage(alertBox);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleLogoutClick = () => {\n    // Call the server to remove session cookies\n    fetch(\"/logout\").then(response => {\n      if (response.ok) {\n        setLoggedIn(false);\n        window.location.href = \"/\"; // redirect to home page after logout\n      } else {\n        console.error(\"Logout failed\");\n      }\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n\n  // React.useEffect(() => {\n  //   fetch('/status')\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //      console.log(data.status)\n  //      setLoggedIn(boolean(data.status))\n  //     })\n  //     .catch((error) => console.error(error));\n  // }, [window.location.pathname]);\n\n  React.useEffect(() => {\n    const loginPopup = document.getElementById(\"login-popup\");\n    if (showPopup) {\n      loginPopup.style.display = \"block\";\n    } else {\n      loginPopup.style.display = \"none\";\n    }\n  }, [showPopup]);\n\n  // React.useEffect(() => {\n  //   const navbar_logged_in = document.getElementById(\"navbar-logged-in\");\n  //   const navbar_logged_out = document.getElementById(\"navbar-logged-out\");\n  //   if (loggedIn) {\n  //     navbar_logged_in.style.display = \"block\";\n  //     navbar_logged_out.style.display = \"none\";\n  //   }\n  //   else {\n  //     navbar_logged_in.style.display = \"none\";\n  //     navbar_logged_out.style.display = \"block\";\n  //   }\n  // }, [loggedIn]);\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleEscapeKey);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/dashboard\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/signup\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"players\",\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Root, \"HlQKk64fgT0kC2ndghX3+zTLiNU=\");\n_c = Root;\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["Outlet","NavLink","Root","showPopup","setShowPopup","React","useState","alertMessage","setAlertMessage","loggedIn","setLoggedIn","handleLoginClick","handlePopupClose","handlePopupClick","event","target","currentTarget","handleEscapeKey","keyCode","handleLoginFormSubmit","preventDefault","email","value","password","rememberMe","checked","fetch","method","headers","body","JSON","stringify","then","response","ok","loginPopup","document","getElementById","style","display","alertBox","catch","error","console","handleLogoutClick","window","location","href","useEffect","addEventListener","removeEventListener"],"sources":["/Users/Tatiana/src/_react/src/layouts/RootLayout.js"],"sourcesContent":["import { Outlet, NavLink } from \"react-router-dom\";\n\nexport default function Root() {\n  \n      const [showPopup, setShowPopup] = React.useState(false);\n      const [alertMessage, setAlertMessage] = React.useState(\"\");\n      const [loggedIn, setLoggedIn] = React.useState(false);\n\n      const handleLoginClick = () => {\n          setShowPopup(true);\n      };\n      \n      const handlePopupClose = () => {\n          setShowPopup(false);\n      };\n      \n      const handlePopupClick = (event) => {\n          if (event.target === event.currentTarget) {\n          setShowPopup(false);\n          }\n      };\n\n      const handleEscapeKey = (event) => {\n          if (event.keyCode === 27) {\n          setShowPopup(false);\n          }\n      };\n      \n      const handleLoginFormSubmit = (event) => {\n          event.preventDefault();\n          const email = event.target.email.value;\n          const password = event.target.password.value;\n          const rememberMe = event.target.rememberMe.checked;\n      \n          // Send email, password, and rememberMe to server for authentication\n          fetch('/login', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ email, password, rememberMe })\n          })\n          .then(response => {\n          if (response.ok) {\n              // Authentication successful\n              const loginPopup = document.getElementById('login-popup');\n              loginPopup.style.display = \"none\";\n              setLoggedIn(true);\n              setShowPopup(false);\n              // window.location.href = '/dashboard';\n          } else {\n              // Authentication failed\n              const alertBox = '<div class=\"alert alert-danger\" role=\"alert\">' +\n                  'Login failed. Please try again.' +\n                  '</div>'\n              setAlertMessage(alertBox);\n          }\n          })\n          .catch(error => {\n          console.error('Error:', error);\n          });\n      };\n\n      const handleLogoutClick = () => {\n          // Call the server to remove session cookies\n          fetch(\"/logout\")\n          .then((response) => {\n              if (response.ok) {\n              setLoggedIn(false);\n              window.location.href = \"/\"; // redirect to home page after logout\n              } else {\n              console.error(\"Logout failed\");\n              }\n          })\n          .catch((error) => {\n              console.error(\"Error:\", error);\n          });\n      };\n      \n          // React.useEffect(() => {\n          //   fetch('/status')\n          //     .then((response) => response.json())\n          //     .then((data) => {\n          //      console.log(data.status)\n          //      setLoggedIn(boolean(data.status))\n          //     })\n          //     .catch((error) => console.error(error));\n          // }, [window.location.pathname]);\n      \n      React.useEffect(() => {\n          const loginPopup = document.getElementById(\"login-popup\");\n          if (showPopup) {\n          loginPopup.style.display = \"block\";\n          }\n          else {\n          loginPopup.style.display = \"none\";\n          }\n      }, [showPopup]);\n\n      // React.useEffect(() => {\n      //   const navbar_logged_in = document.getElementById(\"navbar-logged-in\");\n      //   const navbar_logged_out = document.getElementById(\"navbar-logged-out\");\n      //   if (loggedIn) {\n      //     navbar_logged_in.style.display = \"block\";\n      //     navbar_logged_out.style.display = \"none\";\n      //   }\n      //   else {\n      //     navbar_logged_in.style.display = \"none\";\n      //     navbar_logged_out.style.display = \"block\";\n      //   }\n      // }, [loggedIn]);\n\n\n      React.useEffect(() => {\n          document.addEventListener(\"keydown\", handleEscapeKey);\n          return () => {\n          document.removeEventListener(\"keydown\", handleEscapeKey);\n          };\n      }, []);\n\n    return (\n    <div className=\"root-layout\">\n      <header>\n        <nav>\n          <NavLink to=\"/\">Home</NavLink>\n          <NavLink to=\"/dashboard\">Dashboard</NavLink>\n          <NavLink to=\"/signup\">Signup</NavLink>\n          <NavLink to=\"players\">Players</NavLink>\n          <button>Login</button>\n        </nav>\n      </header>\n      <main>\n        <Outlet />\n      </main>\n    </div>\n  )\n}"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,kBAAkB;AAAC;AAEnD,eAAe,SAASC,IAAI,GAAG;EAAA;EAEzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGL,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMK,gBAAgB,GAAG,MAAM;IAC3BP,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMQ,gBAAgB,GAAG,MAAM;IAC3BR,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACC,MAAM,KAAKD,KAAK,CAACE,aAAa,EAAE;MAC1CZ,YAAY,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;EAED,MAAMa,eAAe,GAAIH,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACI,OAAO,KAAK,EAAE,EAAE;MAC1Bd,YAAY,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;EAED,MAAMe,qBAAqB,GAAIL,KAAK,IAAK;IACrCA,KAAK,CAACM,cAAc,EAAE;IACtB,MAAMC,KAAK,GAAGP,KAAK,CAACC,MAAM,CAACM,KAAK,CAACC,KAAK;IACtC,MAAMC,QAAQ,GAAGT,KAAK,CAACC,MAAM,CAACQ,QAAQ,CAACD,KAAK;IAC5C,MAAME,UAAU,GAAGV,KAAK,CAACC,MAAM,CAACS,UAAU,CAACC,OAAO;;IAElD;IACAC,KAAK,CAAC,QAAQ,EAAE;MAChBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEE,QAAQ;QAAEC;MAAW,CAAC;IACpD,CAAC,CAAC,CACDQ,IAAI,CAACC,QAAQ,IAAI;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACb;QACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;QACzDF,UAAU,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;QACjC7B,WAAW,CAAC,IAAI,CAAC;QACjBN,YAAY,CAAC,KAAK,CAAC;QACnB;MACJ,CAAC,MAAM;QACH;QACA,MAAMoC,QAAQ,GAAG,+CAA+C,GAC5D,iCAAiC,GACjC,QAAQ;QACZhC,eAAe,CAACgC,QAAQ,CAAC;MAC7B;IACA,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAM;IAC5B;IACAlB,KAAK,CAAC,SAAS,CAAC,CACfM,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACjBxB,WAAW,CAAC,KAAK,CAAC;QAClBmC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;MAC5B,CAAC,MAAM;QACPJ,OAAO,CAACD,KAAK,CAAC,eAAe,CAAC;MAC9B;IACJ,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;;EAEG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEJrC,KAAK,CAAC2C,SAAS,CAAC,MAAM;IAClB,MAAMb,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IACzD,IAAIlC,SAAS,EAAE;MACfgC,UAAU,CAACG,KAAK,CAACC,OAAO,GAAG,OAAO;IAClC,CAAC,MACI;MACLJ,UAAU,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;IACjC;EACJ,CAAC,EAAE,CAACpC,SAAS,CAAC,CAAC;;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAE,KAAK,CAAC2C,SAAS,CAAC,MAAM;IAClBZ,QAAQ,CAACa,gBAAgB,CAAC,SAAS,EAAEhC,eAAe,CAAC;IACrD,OAAO,MAAM;MACbmB,QAAQ,CAACc,mBAAmB,CAAC,SAAS,EAAEjC,eAAe,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAER,oBACA;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAA,uBACE;QAAA,wBACE,QAAC,OAAO;UAAC,EAAE,EAAC,GAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eAC9B,QAAC,OAAO;UAAC,EAAE,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eAC5C,QAAC,OAAO;UAAC,EAAE,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eACtC,QAAC,OAAO;UAAC,EAAE,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eACvC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB;MAAA;QAAA;QAAA;QAAA;MAAA;IAClB;MAAA;MAAA;MAAA;IAAA,QACC,eACT;MAAA,uBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAtIuBf,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}