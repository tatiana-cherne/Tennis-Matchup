[{"/Users/Tatiana/src/_react/src/index.js":"1","/Users/Tatiana/src/_react/src/App.js":"2","/Users/Tatiana/src/_react/src/pages/Home.js":"3","/Users/Tatiana/src/_react/src/pages/Players.js":"4","/Users/Tatiana/src/_react/src/layouts/RootLayout.js":"5","/Users/Tatiana/src/_react/src/pages/PlayerProfile.js":"6","/Users/Tatiana/src/_react/src/pages/Signup.js":"7","/Users/Tatiana/src/_react/src/pages/Courts.js":"8","/Users/Tatiana/src/_react/src/pages/CourtProfile.js":"9","/Users/Tatiana/src/_react/src/pages/Scheduler.js":"10","/Users/Tatiana/src/_react/src/pages/Dashboard.js":"11","/Users/Tatiana/src/_react/src/pages/NotFound.js":"12","/Users/Tatiana/src/_react/src/pages/Rating.js":"13","/Users/Tatiana/src/_react/src/httpClient.js":"14"},{"size":247,"mtime":1669907964000,"results":"15","hashOfConfig":"16"},{"size":2209,"mtime":1682610863804,"results":"17","hashOfConfig":"16"},{"size":96,"mtime":1682472423918,"results":"18","hashOfConfig":"16"},{"size":6050,"mtime":1682634777621,"results":"19","hashOfConfig":"16"},{"size":6176,"mtime":1682634991386,"results":"20","hashOfConfig":"16"},{"size":1272,"mtime":1682515095130,"results":"21","hashOfConfig":"16"},{"size":8666,"mtime":1682616749331,"results":"22","hashOfConfig":"16"},{"size":1691,"mtime":1682602044865,"results":"23","hashOfConfig":"16"},{"size":1874,"mtime":1682515090763,"results":"24","hashOfConfig":"16"},{"size":5273,"mtime":1682605382906,"results":"25","hashOfConfig":"16"},{"size":4185,"mtime":1682601888736,"results":"26","hashOfConfig":"16"},{"size":219,"mtime":1682608133896,"results":"27","hashOfConfig":"16"},{"size":2108,"mtime":1682608730145,"results":"28","hashOfConfig":"16"},{"size":86,"mtime":1682633921852,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"bkd1jp",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"33"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Tatiana/src/_react/src/index.js",[],[],[],"/Users/Tatiana/src/_react/src/App.js",[],[],"/Users/Tatiana/src/_react/src/pages/Home.js",[],[],"/Users/Tatiana/src/_react/src/pages/Players.js",["79"],[],"/Users/Tatiana/src/_react/src/layouts/RootLayout.js",[],[],"/Users/Tatiana/src/_react/src/pages/PlayerProfile.js",["80"],[],"import { useLoaderData, useParams, Link } from 'react-router-dom'\n\nexport default function PlayerProfile() {\n  const { id } = useParams();\n  const player = useLoaderData()\n\n  return (\n    <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n               {/* <img src=\"public/placeholder.jpg\" className=\"img-fluid\"></img> */}\n            </div>\n            <div className=\"col-md-8\">\n                <h1>{ player.fname } { player.lname }</h1>\n                <p>Gender: { player.gender }</p>\n                <p>Skill Level: { player.skill_lvl }</p>\n                <p>Game Preference: { player.game_pref }</p>\n                <p>Join Date: { player.join_date }</p>\n                {/* <p>Preferred Court: { player.pref_court.name }</p> */}\n            </div>\n        </div>\n        TO UPDATE: NEED TO INCLUDE MAP WITH ALL COURT PREFS\n        TO UPDATE: NEED TO SHOW PLAYER HISTORY\n\n    <Link to={`/scheduler?player_id=${player.id}`}>Schedule a session</Link>\n    </div>\n  )\n}\n\n// data loader\nexport const PlayerProfileLoader = async ({ params }) => {\n  const { id } = params\n\n  const res = await fetch('http://localhost:5000/players/' + id)\n\n  if (!res.ok) {\n    throw Error('Could not find player.')\n  }\n\n  return res.json()\n}","/Users/Tatiana/src/_react/src/pages/Signup.js",[],[],"/Users/Tatiana/src/_react/src/pages/Courts.js",["81"],[],"import { useLoaderData, Link } from 'react-router-dom'\n\nexport default function Courts(props) {\n    const { loggedIn } = props;\n    const courts = useLoaderData()\n  \n    return (\n        <div className=\"container\">\n        <h1>Tennis Courts</h1>\n        <h5>These tennis courts are public and provided by NYC parks. \n            Submit your court if you don't see it here!\n        </h5>\n        <table className=\"table table-striped align-middle mb-0 bg-white\">\n            <thead>\n                <tr>\n                    <th>Borough</th>\n                    <th>Name</th>\n                    <th>Location</th>\n                    <th>Phone</th>\n                    <th>Court Count</th>\n                    <th>Indoor/Outdoor</th>\n                    <th>Surface</th>\n                    <th>Accessible</th>\n                </tr>\n            </thead>\n            <tbody>\n              {courts.map((court) => (\n                <tr key={court.id}>\n                    <td>{ court.borough }</td>\n                    <td><Link to={`/courts/${court.id}`}> { court.name } </Link></td>\n                    <td>{ court.location }</td>\n                    <td>{ court.phone }</td>\n                    <td>{ court.court_count }</td>\n                    <td>{ court.indoor_outdoor }</td>\n                    <td>{ court.surface }</td>\n                    <td>{ court.accessible }</td>\n                </tr>\n              ))}\n            </tbody>\n        </table>\n    </div>\n  )\n  }\n\n// data loader\nexport const CourtsLoader = async () => {\n\n  const res = await fetch('http://localhost:5000/courts')\n  \n  if (!res.ok) {\n    throw Error('Could not fetch the list of courts')\n  }\n  \n  return res.json()\n}","/Users/Tatiana/src/_react/src/pages/CourtProfile.js",["82"],[],"import { useLoaderData, useParams, Link } from 'react-router-dom'\n\nexport default function CourtProfile() {\n  const { id } = useParams();\n  const court = useLoaderData()\n\n  return (\n    <div class=\"container mt-5\">\n    <h1>Court Profile</h1>\n    <table class=\"table table-bordered\">\n      <tbody>\n        <tr>\n          <th>Borough:</th>\n          <td>{ court.borough }</td>\n        </tr>\n        <tr>\n          <th>Name:</th>\n          <td>{ court.name }</td>\n        </tr>\n        <tr>\n          <th>Location:</th>\n          <td>{ court.location }</td>\n        </tr>\n        <tr>\n          <th>Phone:</th>\n          <td>{ court.phone }</td>\n        </tr>\n        <tr>\n          <th>Court Count:</th>\n          <td>{ court.court_count }</td>\n        </tr>\n        <tr>\n          <th>Indoor/Outdoor:</th>\n          <td>{ court.indoor_outdoor }</td>\n        </tr>\n        <tr>\n          <th>Surface:</th>\n          <td>{ court.surface }</td>\n        </tr>\n        <tr>\n          <th>Accessible:</th>\n          <td>{ court.accessible }</td>\n        </tr>\n      </tbody>\n    </table> \n    {/* <h2>Preferred Players</h2>\n    <ul>\n      {% for player in court.pref_players %}\n        <li>{{ player.fname }} {{ player.lname }}</li>\n      {% endfor %}\n    </ul>\n    <h2>Players</h2>\n    <ul>\n      {% for player in court.players %}\n        <li>{{ player.name }}</li>\n      {% endfor %}\n    </ul>\n    <h2>Activities</h2>\n    <ul>\n      {% for activity in court.activities %}\n        <li>{{ activity.date }}</li>\n      {% endfor %}\n    </ul> */}\n    <Link to=\"/scheduler\">Schedule a session</Link>  \n  </div>\n  )\n}\n\n// data loader\nexport const CourtProfileLoader = async ({ params }) => {\n    const { id } = params\n  \n    const res = await fetch('http://localhost:5000/courts/' + id)\n  \n    if (!res.ok) {\n      throw Error('Could not find court.')\n    }\n  \n    return res.json()\n  }","/Users/Tatiana/src/_react/src/pages/Scheduler.js",["83"],[],"import { useState } from \"react\";\nimport { useLoaderData, Link } from 'react-router-dom'\n\n\nexport default function Scheduler(props) {\n  const { loggedIn } = props;\n  const data = useLoaderData();\n\n  const [formData, setFormData] = useState({\n    hittingPartner: \"\",\n    schedulingPlayer: loggedIn,\n    datetime:\"\",\n    courtSession:\"\",\n    matchType:\"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:5000/submit-schedule\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-9\">\n          <div className=\"card mt-4\">\n            <div className=\"card-header bg-secondary text-white text-center\">\n              <h4 className=\"mb-0\">Schedule a Hitting Session</h4>\n            </div>\n            <div className=\"card-body\">\n              <form id=\"my-form\" className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"hitting-partner\">Hitting Partner:</label>\n                  <select className=\"form-control\" id=\"hitting-partner\" name=\"hittingPartner\" required>\n                    <option value=\"\" disabled selected hidden>\n                      Select Player\n                    </option>\n                    {data.players.map((player) => (      \n                      <option \n                        key={player.id} \n                        value={player.id.toString()}\n                        onChange={handleInputChange}\n                        required\n                        >{player.fname} {player.lname} ({player.skill_lvl.toFixed(1)})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"datetime\">Date:</label>\n                  <input \n                    type=\"datetime-local\" \n                    id=\"datetime\" \n                    name=\"datetime\" \n                    onChange={handleInputChange}\n                    required/>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"court-session\">Court:</label>\n                  <select className=\"form-control\" id=\"court-session\" name=\"courtSession\" required>\n                    <option value=\"\" disabled selected hidden>\n                      Select Court\n                    </option>\n                    {data.courts.map((court) => (  \n                      <option \n                        key={court.id} \n                        value={court.id.toString()}\n                        onChange={handleInputChange}\n                        required\n                        >{court.name} ({court.borough})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>Match Type:</label>\n                  <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label className=\"btn btn-outline-secondary active\">\n                      <input \n                        type=\"radio\" \n                        name=\"matchType\" \n                        value=\"match\" \n                        onFocus={handleInputChange}\n                        required\n                        /> Match\n                    </label>\n                    <label className=\"btn btn-outline-secondary\">\n                      <input \n                        type=\"radio\" \n                        name=\"matchType\" \n                        value=\"practice\" \n                        onChange={handleInputChange}\n                        /> Practice\n                    </label>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <button \n                    type=\"submit\" \n                    className=\"btn btn-primary mx-auto col-6\"\n                    onSubmit={handleSubmit}\n                    >Submit\n                  </button>\n                </div>\n                {/* <!-- Hidden input field to store the session ID -->\n                <input type=\"hidden\" name=\"session_id\" value=\"{{ session['id'] }}\">\n                <button type=\"submit\" className=\"btn btn-primary col-md-3\">Submit</button> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n  }\n\n// data loader\nexport const CourtsPlayersLoader = async () => {\n\n    const res = await fetch('http://localhost:5000/courts-players')\n    \n    if (!res.ok) {\n      throw Error('Could not fetch all courts and players')\n    }\n    \n    return res.json()\n  }","/Users/Tatiana/src/_react/src/pages/Dashboard.js",["84"],[],"export default function Dashboard(props) {\n    const { loggedIn } = props;\n  \n    return (\n      <div className=\"dashboard\">\n        DASHBOARD\n      </div>\n  )\n  }\n\n//   const form = document.getElementById(\"profile-picture-form\");\n// const photoInput = document.getElementById(\"photo-input\");\n// const removePictureBtn = document.getElementById(\"remove-picture-btn\");\n\n// form.addEventListener(\"submit\", event => {\n//   event.preventDefault();\n\n//   const formData = new FormData(form);\n\n//   fetch(\"/upload_photo\", {\n//     method: \"POST\",\n//     body: formData\n//   })\n//   .then(response => response.text())\n//   .then(result => {\n//     if (result.ok) {\n//       // Reload the page to display the updated photo\n//       location.reload();\n//     } else {\n//       console.error(\"Error uploading photo\");\n//     }\n//   });\n// });\n\n// if (removePictureBtn) {\n//   removePictureBtn.addEventListener(\"click\", () => {\n//     const playerId = {{ player.id }};\n\n//     fetch(`/remove_photo/${playerId}`, {\n//       method: \"POST\"\n//     })\n//     .then(response => response.text())\n//     .then(result => {\n//       if (result === \"success\") {\n//         // Reload the page to remove the photo\n//         location.reload();\n//       } else {\n//         console.error(\"Error removing photo\");\n//       }\n//     });\n//   });\n// }\n\n\n\n// function ProfilePicture() {\n//   const [photo, setPhoto] = useState(\"static/images/temp-profile.jpeg\");\n\n//   const handleUploadPhoto = (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData(event.target);\n\n//     fetch(\"/upload_photo\", {\n//       method: \"POST\",\n//       body: formData\n//     })\n//       .then((response) => {\n//         if (response.ok) {\n//           return response.json();\n//         } else {\n//           throw new Error(\"Error uploading photo\");\n//         }\n//       })\n//       .then((data) => {\n//         setPhoto(data.url);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const handleRemovePhoto = (event) => {\n//     event.preventDefault();\n\n//     fetch(`/remove_photo/${player.id}`, {\n//       method: \"POST\"\n//     })\n//       .then((response) => {\n//         if (response.ok) {\n//           return response.json();\n//         } else {\n//           throw new Error(\"Error removing photo\");\n//         }\n//       })\n//       .then((data) => {\n//         setPhoto(\"static/images/temp-profile.jpeg\");\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"col-md-4\">\n//       {photo ? (\n//         <img src={photo} alt=\"Profile Picture\" className=\"profile-picture\" />\n//       ) : (\n//         <img\n//           src=\"static/images/temp-profile.jpeg\"\n//           alt=\"Default Profile Picture\"\n//           className=\"profile-picture\"\n//         />\n//       )}\n//       <form onSubmit={handleUploadPhoto}>\n//         <input type=\"hidden\" name=\"player_id\" value={player.id} />\n//         <div className=\"form-group\">\n//           <label htmlFor=\"photo\">Upload Photo</label>\n//           <input type=\"file\" name=\"photo\" className=\"form-control-file\" />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">\n//           Upload\n//         </button>\n//       </form>\n//       <button onClick={handleRemovePhoto} className=\"btn btn-danger\">\n//         Remove\n//       </button>\n//     </div>\n//   );\n// }\n\n// function PlayerInfo({ player }) {\n//   return (\n//     <div className=\"col-md-8\">\n//       <h1>\n//         {player.fname} {player.lname}\n//       </h1>\n//       <p>Gender: {player.gender}</p>\n//       <p>Skill Level: {player.skill_lvl}</p>\n//       <p>Game Preference: {player.game_pref}</p>\n//       <p>Join Date: {player.join_date}</p>\n//       <p>Preferred Court: {player.pref_court_id}</p>\n//     </div>\n//   );\n// }\n\n// function App({ player }) {\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         <ProfilePicture player={player} />\n//         <PlayerInfo player={player} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// ReactDOM.render(<App />, document.getElementById(\"player-profile\"));","/Users/Tatiana/src/_react/src/pages/NotFound.js",[],[],"/Users/Tatiana/src/_react/src/pages/Rating.js",["85"],[],"export default function Rating(props) {\n  const { loggedIn } = props;\n\n  return (\n    <div class=\"card col-md-9 mt-4\">\n      <div class=\"card-body \">\n        <h5 class=\"card-title\">Add Rating</h5>\n        <form method=\"POST\" action=\"/submit-ratings\">\n          <div class=\"form-group\">\n            <label for=\"player_id\">Player ID:</label>\n            <input type=\"text\" id=\"player_id\" name=\"player_id\" class=\"form-control\" required/>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"activity_id\">Activity ID:</label>\n            <input type=\"text\" id=\"activity_id\" name=\"activity_id\" class=\"form-control\" required/>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"rating\">Rating:</label>\n            <div class=\"btn-group-toggle\" data-toggle=\"buttons\">\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" name=\"rating\" value=\"2.5\"/> 2.5\n              </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" name=\"rating\" value=\"3\"/> 3\n              </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" name=\"rating\" value=\"3.5\"/> 3.5\n              </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" name=\"rating\" value=\"4\"/> 4\n              </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" name=\"rating\" value=\"4.5\"/> 4.5\n              </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" name=\"rating\" value=\"5\"/> 5\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"comments\">Comments:</label>\n            <textarea id=\"comments\" name=\"comments\" class=\"form-control\" required></textarea>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        </form>\n        <div class=\"text-muted mt-3\">\n          <span>Reminder, player is currently rated [PLACEHOLDER]</span>\n        </div>\n      </div>\n    </div>\n  )}\n","/Users/Tatiana/src/_react/src/httpClient.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":18},{"ruleId":"86","severity":1,"message":"90","line":4,"column":11,"nodeType":"88","messageId":"89","endLine":4,"endColumn":13},{"ruleId":"86","severity":1,"message":"91","line":4,"column":13,"nodeType":"88","messageId":"89","endLine":4,"endColumn":21},{"ruleId":"86","severity":1,"message":"90","line":4,"column":11,"nodeType":"88","messageId":"89","endLine":4,"endColumn":13},{"ruleId":"86","severity":1,"message":"92","line":2,"column":25,"nodeType":"88","messageId":"89","endLine":2,"endColumn":29},{"ruleId":"86","severity":1,"message":"91","line":2,"column":13,"nodeType":"88","messageId":"89","endLine":2,"endColumn":21},{"ruleId":"86","severity":1,"message":"91","line":2,"column":11,"nodeType":"88","messageId":"89","endLine":2,"endColumn":19},"no-unused-vars","'RootLayout' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'Link' is defined but never used."]